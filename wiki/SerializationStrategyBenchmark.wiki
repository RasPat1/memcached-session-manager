#summary A comparison of some of the serialization strategies performance wise.

This was a run of the [http://github.com/magro/memcached-session-manager/tree/master/serializer-benchmark/ serializer-benchmark] on my T61 (Core Duo T7300, 2x2GHz) running Fedora Core 12 with Sun JDK 1.6.0_18-b07:
{{{
java -Xms512M -Xmx512M -classpath [..] de.javakaffee.web.msm.serializer.Benchmark
}}}

The plain numbers are published here: [http://spreadsheets.google.com/pub?key=0AspDnQzTrkhddDRWeEl3LWs5R0UxbFB6MURmdHY1cGc&gid=0 spreadsheets.google.com] (all number are millis, also in the charts below)

A short explanation of the legend :-)
  * _Ser_ stands for serialization time
  * _Deser_ - guess - stands for deserialization time
  * _Min_, _Avg_, _Max_ are minimum, average and maximum time required for 500 serializations/deserializations (10 cycles)


=== Benchmark small (20 person samples, 7 component samples) ===
http://spreadsheets.google.com/oimg?key=0AspDnQzTrkhddDRWeEl3LWs5R0UxbFB6MURmdHY1cGc&oid=2&v=1273186036253&foo=bar.png


=== Benchmark medium (100 person samples, 31 component samples) ===
http://spreadsheets.google.com/oimg?key=0AspDnQzTrkhddDRWeEl3LWs5R0UxbFB6MURmdHY1cGc&oid=4&v=1273186069983&foo=bar.png


=== Benchmark big (500 person samples, 261 component samples) ===
http://spreadsheets.google.com/oimg?key=0AspDnQzTrkhddDRWeEl3LWs5R0UxbFB6MURmdHY1cGc&oid=6&v=1273186101696&foo=bar.png