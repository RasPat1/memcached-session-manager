#summary This page lists changes for each release of memcached-session-manager.
#labels Featured

= 1.5.0 to 1.5.1 =
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=106 #106]: Session not updated in memcached when only a session attribute was removed
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=105 #105]: Make memcached node optional for single-node setup, so that the sessionId is left unchanged in this case (e.g. memcachedNodes="localhost:11211"). If instead memcachedNodes="n1:localhost:11211" is used the nodeId is still appended to the sessionId.

= 1.4.1 to 1.5.0 =
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=101 #101]: Form based authentication does not work with non-sticky sessions
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=99 #99]: Add attribute filter to control which session attributes are serialized to memcached (new configuration attribute {{{sessionAttributeFilter}}} accepting a regular expression, e.g. {{{sessionAttributeFilter="^(userName|sessionHistory)$"}}}). (thanx at Rainer Jung for this contribution!)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=98 #98]: Non-sticky sessions: Session meta data stored asynchronously with sessionBackupAsync="false"
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=97 #97]: Add support for jsf2/mojarra kryo serialization (added custom serializer for mojarras LRUMap, this can be added as customConverter: {{{de.javakaffee.web.msm.serializer.kryo.FacesLRUMapRegistration}}})
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=67 #67]: Make msm available in maven repository (available in maven central now under groupId "de.javakaffee.msm"). So that both tomcat6 and tomcat7 versions can be pushed in one step to maven central there was a restructuring needed, so that now there's a core module (not specific to a tomcat version) and the tomcat6 and tomcat7 modules. Therefore for installation two msm jars have to be put in {{{$CATALINA_HOME/lib}}}: {{{memcached-session-manager-${version}.jar}}} and {{{memcached-session-manager-tc7-${version}.jar}}} (or {{{memcached-session-manager-tc6-${version}.jar}}}.

= 1.4.0 to 1.4.1 =

 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=96 #96]: Tests fail occasionally on windows (only changes to unit-test libs)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=95 #95]: Secondary session backup is tried to be removed with non-sticky sessions and only a single memcached
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=94 #94]: Don't remove unserializable attributes from active sessions (with default/java serialization)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=93 #93]: Redundant retrieval of session from memcached after TC failover (with jvmRoute + securityConstraint/Valve)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=92 #92]: Incomplete change of session ID after Tomcat failover (with jvmRoute + securityConstraint/Valve)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=91 #91]: Windows only: memcached failover can break memcached client / connection
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=90 #90]: When the jvmRoute contains a dash (-) sessions are not saved in memcached (tomcat7 only)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=89 #89]: NPE in !SessionTrackerValve using log level DEBUG
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=88 #88]: Support session-timeout of 0 or less (no session expiration)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=87 #87]: Tomcat doesn't start in !TestUtils on Windows - backslash escape needed

= 1.4.0-RC3 to 1.4.0 =

 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=86 #86]: Don't load a non-sticky session from memcached when not accessed from request
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=85 #85]: Don't perform additional tasks for non-sticky sessions with invalid sessionId
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=84 #84]: Improve debug logging for non-sticky sessions and memcached failover
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=83 #83]: Memcached node failover does not work for non-sticky sessions
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=76 #76]: Nonsticky-session support: Check/implement listener notification on swapOut of sessions at the end of the request

= 1.4.0-RC2 to 1.4.0-RC3 =

 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=82 #82]: tomcat7: Manager not properly reinitialized on context reload
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=80 #80]: Webapp context reload causes !ClassCastException with sticky sessions
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=78 #78]: Add JMX performance stats for non-sticky session operations

= 1.4.0-RC1 to 1.4.0-RC2 =

 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=81 #81]: Background expiration update for session that was loaded from memcached fails
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=79 #79]: In non-sticky sessions mode with only a single memcached the backup is done in the primary node

= 1.3.6 to 1.4.0-RC1 =

[http://groups.google.com/group/memcached-session-manager/t/612891b0ae10649d Announcement of release 1.4.0-RC1]

 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=77 #77]: Make memcached-session-manager work with Tomcat 7.x (thanx at Jorge Carabias for initial contribution)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=70 #70]: Improve support for nonsticky sessions
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=71 #71]: Session locking for non-sticky sessions: all, auto detection of readonly requests, uri-pattern based
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=72 #72]: Add storage of non-sticky sessions in another/secondary memcached node, handle memcached failover for non-sticky sessions
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=74 #74]: Touching unmodified/not-updated sessions must be solved differently
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=68 #68]: Change of sessionId on login with BASIC auth must be handled correctly
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=66 #66]: Make !SessionTrackerValve.setNewSessionCookie more robust (handle different possible cases)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=65 #65]: Session cookie name is hardcoded to JSESSIONID
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=62 #62]: Support jvmRoutes containing dashes (-) (thanx at Paul G. Weiss for patches)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=60 #60]: Add possibility to disable msm at runtime via JMX (thanx at Paul G. Weiss for patches)

= 1.3.0 to 1.3.6 =

[http://groups.google.com/group/memcached-session-manager/t/28540c1feec4b273 Announcement of release 1.3.6]

 * Added new serialization strategy based on [http://code.google.com/p/kryo/ kryo] with a really good performance: SerializationStrategyBenchmark (usage and configuration described in SetupAndConfiguration).
 * A new {{{DummyMemcachedBackupSessionManager}}} for permanent failover simulation during development, to see that session deserialization is working (more is described on SetupAndConfiguration with the {{{className}}} attribute).
 * Removed msm-javolution-serializer-cglib and msm-javolution-serializer-jodatime, both custom converters are now included in the msm-javolution-serializer jar.
 * Added custom converter for serialization/deserialization of hibernate persistent collections (for javolution and kryo), details on SetupAndConfiguration.

= 1.2.0 to 1.3.0 =

[http://groups.google.com/group/memcached-session-manager/t/1f347fbb626338fc Announcement of release 1.3.0]

Change:
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=53 #53]: By default, perform session backup asynchronously (change default for sessionBackupAsync from false to true).

Improvements:
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=50 #50]: Allow configuration of memcached protocol to use
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=51 #51]: Session serialization should be done asynchronously when sessionBackupAsync=true
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=52 #52]: Add backupThreadCount attribute to specify number of threads to use for async session backup
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=54 #54]: Support session cookie '!HttpOnly' flag when changing session id due to memcached failover (for tomcat >= 6.0.19 only)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=56 #56]: javolution-serializer: support public Collections/Maps providing only a constructor taking an int (size)
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=57 #57]: javolution-serializer: Provide more efficient serialization for !StringBuffer and !StringBuilder
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=59 #59]: Add support for serialization/deserialization of cglib proxies to javolution-serializer

Fixes:
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=38 #38]: Notify !HttpSessionListeners and !HttpSessionActivationListeners when loading a session from memcached
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=55 #55]: Wicket's !MiniMap cannot be deserialized with javolution serializer
 * [http://code.google.com/p/memcached-session-manager/issues/detail?id=58 #58]: Change jvmRoute on tomcat failover (when a session is served by another tomcat)


= 1.1.1 to 1.2.0 =

[http://groups.google.com/group/memcached-session-manager/t/f113b97a121d1e9f Announcement of release 1.2.0]

Improvements:
  * There's a new configuration attribute "customConverter" that provides the possibility to specify custom converter. This is only supported by the javoluation serializer (not possible for java and xstream serialization)
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=32 #32]: msm-javolution-serializer should provide more efficient serialization of joda !DateTime (this is available as msm-javolution-serializer-jodatime, required the "customConverter" feature)
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=36 #36]: Store modified sessions only
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=42 #42]: createSession might take a possibly provided sessionId into account
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=43 #43]: Calculate statistics for serialization time / backup time / load time / skips etc (see [2] for more)
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=44 #44]: Support comma-separated list of nodes
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=46 #46]: Support reconfiguration of memcached nodes at runtime via jmx

Fixes: 
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=33 #33]: msm-javolution-serializer: !ReflectionBinding does not honor XMLSerializable interface
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=34 #34]: msm-javolution-serializer: java.util.Currency gets deserialized with !ReflectionFormat
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=35 #35]: Use same logging system as Tomcat
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=40 #40]: webapp sets cookie for every page if memcached process is missing
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=41 #41]: createSession should take maxActiveSessions into account
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=47 #47]: Cookie set on memcached failure doesn't honor request's secure property
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=48 #48]: Memcached failover / session relocation not supported when cookies are disabled
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=49 #49]: Sessions not associated with a memcached node don't get associated as soon as a memcached is available


= 1.1 to 1.1.1 (only msm-javolution-serializer) =
This refers to the maintenance release 1.1.1 for the msm-javolution-serializer with the following fixed bugs:
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=27 #27]: Serialization of !AtomicInteger fails for msm-javolution-serializer
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=28 #28]: msm-javolution-serializer should support serialization of java.util.Collections$!EmptyList
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=30 #30]: msm-javolution-serializer should support serialization of java.util.Collections$!UnmodifiableMap 
  * [http://code.google.com/p/memcached-session-manager/issues/detail?id=31 #31]: msm-javolution-serializer should be able to load classes from webapp context 

= 1.0 to 1.1 =
  * Added pluggable session serialization strategies (see SerializationStrategies), configurable via the configuration attribute _transcoderFactoryClass_ (described on [SetupAndConfiguration#MemcachedBackupSessionManager_configuration_attributes SetupAndConfiguration]
  * Added XStream based serialization strategy (see SerializationStrategies)
  * Added Javolution based serialization strategy (see SerializationStrategies)
  * Added configuration attribute _copyCollectionsForSerialization_ (see [SetupAndConfiguration#MemcachedBackupSessionManager_configuration_attributes SetupAndConfiguration] and [SerializationStrategies#Concurrent_modifications_of_collections])

= 1.0 =
  * Initial release of msm