#summary This page describes which statistics are provided via jmx (since 1.2)

= Introduction =

With version 1.2 there are runtime statistics that are provided via jmx. Statistics are enabled by default, but you can also disable them via _enableStatistics="false"_ in the manager configuration.

To access the gathered stats just start jconsole (or visualvm, or what else your preferred jmx tool is), open the MBeans tab and browse to the Manager node, the appropriate Context and the correct Hostname (e.g. _Manager -> /myapp -> localhost_). Open the attributes view and look for everything starting with _msmStat_. Details regarding the meaning of each attribute are provided below.


= Details =

The following statistics attributes are provided by the memcached-session-manager via jmx. If you're interested in more just [http://code.google.com/p/memcached-session-manager/issues/list submit an issue].

|| *Attribute Name* || *Description* ||
|| msmStatNumRequestsWithoutSession || The number of requests without a session ||
|| msmStatNumRequestsWithSession || The number of requests with a session ||
|| msmStatNumTomcatFailover || The number of sessions that were taken over from other tomcats ||
|| msmStatNumBackups || The number of successfull session backups ||
|| msmStatNumMemcachedFailover || The number of session relocations (how many times sessions were moved to another memcached node) ||
|| msmStatNumBackupFailures || The number of backup failures (sessions could not be stored in any memcached node) ||
|| msmStatNumNoSessionAccess || The number of requests that did not access the session at all (so that session backup was skipped) ||
|| msmStatNumNoAttributesAccess || The number of requests that did access the session but did not access session attributes via getAttribute/setAttribute (so that session backup was skipped, and it was not necessary to determine, if the session was modified) ||
|| msmStatNumNoSessionModification || The number of requests that did access the session but did not change any session attribute (so that session backup was skipped) ||
|| msmStatNumSessionsLoadedFromMemcached || The number of sessions that were loaded from memcached ||
|| msmStatEffectiveBackupInfo _(since 1.3)_ || Count, min, avg and max of the total time in millis for session backup spent in the request thread (measured for all requests with a session), including requests where session backup could be omitted e.g. because the session attributes were not accessed. ||
|| msmStatBackupInfo || Count, min, avg and max of the total time in millis for session backup, including serialization and sending data to memcached (excluding backups where a session was relocated) ||
|| msmStatBackupRelocationInfo || Count, min, avg and max of the total time in millis for session relocations, including serialization and sending data to memcached ||
|| msmStatAttributesSerializationInfo ||  Count, min, avg and max of the time in millis for session serialization as part of the backup (actually just the time for the serialization of session attributes) ||
|| msmStatMemcachedUpdateInfo || Count, min, avg and max of the time in millis for storing data in memcached as part of the backup (excluding serialization, including compression) ||
|| msmStatCachedDataSizeInfo || Count, min, avg and max of the size of the data that was sent to memcached (the serialized data after compression) ||
|| msmStatSessionsLoadedFromMemcachedInfo || Count, min, avg and max of the time in millis that took loading sessions from memcached (including deserialization) ||